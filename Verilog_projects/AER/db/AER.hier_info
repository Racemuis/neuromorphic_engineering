|aer
clk => clk.IN2
reset => reset.IN2
write_en => write_en.IN1
preset => EN_Neuron.IN0
spikes[0] => spikes[0].IN1
spikes[1] => spikes[1].IN1
spikes[2] => spikes[2].IN1
spikes[3] => spikes[3].IN1
spikes[4] => spikes[4].IN1
EN_Neuron << EN_Neuron~reg0.DB_MAX_OUTPUT_PORT_TYPE
FIFO_full << FIFO_buffer:b2v_FIFO_buffer.FIFO_full
FIFO_empty << FIFO_buffer:b2v_FIFO_buffer.FIFO_empty
AER[0] << priority_encoder:b2v_priority_encoder.encoder_out
AER[1] << priority_encoder:b2v_priority_encoder.encoder_out
AER[2] << priority_encoder:b2v_priority_encoder.encoder_out
AER[3] << priority_encoder:b2v_priority_encoder.encoder_out


|aer|comparator:b2v_comparator
comp_in[0] => WideNor0.IN0
comp_in[1] => WideNor0.IN1
comp_in[2] => WideNor0.IN2
comp_in[3] => WideNor0.IN3
comp_in[4] => WideNor0.IN4
comp_out <= WideNor0.DB_MAX_OUTPUT_PORT_TYPE


|aer|FIFO_buffer:b2v_FIFO_buffer
clk => buffer.we_a.CLK
clk => buffer.waddr_a[4].CLK
clk => buffer.waddr_a[3].CLK
clk => buffer.waddr_a[2].CLK
clk => buffer.waddr_a[1].CLK
clk => buffer.waddr_a[0].CLK
clk => buffer.data_a[4].CLK
clk => buffer.data_a[3].CLK
clk => buffer.data_a[2].CLK
clk => buffer.data_a[1].CLK
clk => buffer.data_a[0].CLK
clk => write_ptr[0].CLK
clk => write_ptr[1].CLK
clk => write_ptr[2].CLK
clk => write_ptr[3].CLK
clk => write_ptr[4].CLK
clk => FIFO_out[0]~reg0.CLK
clk => FIFO_out[1]~reg0.CLK
clk => FIFO_out[2]~reg0.CLK
clk => FIFO_out[3]~reg0.CLK
clk => FIFO_out[4]~reg0.CLK
clk => read_ptr[0].CLK
clk => read_ptr[1].CLK
clk => read_ptr[2].CLK
clk => read_ptr[3].CLK
clk => read_ptr[4].CLK
clk => buffer.CLK0
reset => read_ptr[0].ACLR
reset => read_ptr[1].ACLR
reset => read_ptr[2].ACLR
reset => read_ptr[3].ACLR
reset => read_ptr[4].ACLR
reset => write_ptr[0].ACLR
reset => write_ptr[1].ACLR
reset => write_ptr[2].ACLR
reset => write_ptr[3].ACLR
reset => write_ptr[4].ACLR
reset => comb.IN1
reset => FIFO_out[0]~reg0.ENA
reset => FIFO_out[4]~reg0.ENA
reset => FIFO_out[3]~reg0.ENA
reset => FIFO_out[2]~reg0.ENA
reset => FIFO_out[1]~reg0.ENA
FIFO_in[0] => buffer.data_a[0].DATAIN
FIFO_in[0] => buffer.DATAIN
FIFO_in[1] => buffer.data_a[1].DATAIN
FIFO_in[1] => buffer.DATAIN1
FIFO_in[2] => buffer.data_a[2].DATAIN
FIFO_in[2] => buffer.DATAIN2
FIFO_in[3] => buffer.data_a[3].DATAIN
FIFO_in[3] => buffer.DATAIN3
FIFO_in[4] => buffer.data_a[4].DATAIN
FIFO_in[4] => buffer.DATAIN4
read_en => always1.IN1
write_en => always0.IN1
FIFO_out[0] <= FIFO_out[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
FIFO_out[1] <= FIFO_out[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
FIFO_out[2] <= FIFO_out[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
FIFO_out[3] <= FIFO_out[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
FIFO_out[4] <= FIFO_out[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
FIFO_full <= Equal1.DB_MAX_OUTPUT_PORT_TYPE
FIFO_empty <= Equal0.DB_MAX_OUTPUT_PORT_TYPE


|aer|multiplexer:b2v_multiplexer
a[0] => mux_out.DATAB
a[1] => mux_out.DATAB
a[2] => mux_out.DATAB
a[3] => mux_out.DATAB
a[4] => mux_out.DATAB
b[0] => mux_out.DATAA
b[1] => mux_out.DATAA
b[2] => mux_out.DATAA
b[3] => mux_out.DATAA
b[4] => mux_out.DATAA
selector => mux_out.OUTPUTSELECT
selector => mux_out.OUTPUTSELECT
selector => mux_out.OUTPUTSELECT
selector => mux_out.OUTPUTSELECT
selector => mux_out.OUTPUTSELECT
mux_out[0] <= mux_out.DB_MAX_OUTPUT_PORT_TYPE
mux_out[1] <= mux_out.DB_MAX_OUTPUT_PORT_TYPE
mux_out[2] <= mux_out.DB_MAX_OUTPUT_PORT_TYPE
mux_out[3] <= mux_out.DB_MAX_OUTPUT_PORT_TYPE
mux_out[4] <= mux_out.DB_MAX_OUTPUT_PORT_TYPE


|aer|priority_encoder:b2v_priority_encoder
clk => remainder[0]~reg0.CLK
clk => remainder[1]~reg0.CLK
clk => remainder[2]~reg0.CLK
clk => remainder[3]~reg0.CLK
clk => remainder[4]~reg0.CLK
clk => encoder_out[0]~reg0.CLK
clk => encoder_out[1]~reg0.CLK
clk => encoder_out[2]~reg0.CLK
clk => encoder_out[3]~reg0.CLK
encoder_in[0] => encoder_out.OUTPUTSELECT
encoder_in[0] => encoder_out.OUTPUTSELECT
encoder_in[0] => encoder_out.OUTPUTSELECT
encoder_in[0] => encoder_out.OUTPUTSELECT
encoder_in[0] => remainder.DATAB
encoder_in[1] => encoder_out.OUTPUTSELECT
encoder_in[1] => encoder_out.OUTPUTSELECT
encoder_in[1] => encoder_out.OUTPUTSELECT
encoder_in[1] => encoder_out.OUTPUTSELECT
encoder_in[1] => stop.OUTPUTSELECT
encoder_in[1] => remainder.DATAB
encoder_in[2] => encoder_out.OUTPUTSELECT
encoder_in[2] => encoder_out.OUTPUTSELECT
encoder_in[2] => encoder_out.OUTPUTSELECT
encoder_in[2] => encoder_out.OUTPUTSELECT
encoder_in[2] => stop.OUTPUTSELECT
encoder_in[2] => remainder.DATAB
encoder_in[3] => encoder_out.OUTPUTSELECT
encoder_in[3] => encoder_out.OUTPUTSELECT
encoder_in[3] => stop.OUTPUTSELECT
encoder_in[3] => remainder.DATAB
encoder_in[3] => encoder_out.DATAA
encoder_in[3] => encoder_out.DATAA
encoder_in[4] => stop.DATAA
encoder_in[4] => remainder.OUTPUTSELECT
encoder_in[4] => encoder_out.OUTPUTSELECT
encoder_in[4] => encoder_out.OUTPUTSELECT
encoder_in[4] => encoder_out.OUTPUTSELECT
encoder_in[4] => always0.IN1
encoder_in[4] => encoder_out.DATAA
encoder_in[4] => encoder_out.DATAA
reset => remainder[0]~reg0.ACLR
reset => remainder[1]~reg0.ACLR
reset => remainder[2]~reg0.ACLR
reset => remainder[3]~reg0.ACLR
reset => remainder[4]~reg0.ACLR
reset => encoder_out[0]~reg0.PRESET
reset => encoder_out[1]~reg0.PRESET
reset => encoder_out[2]~reg0.PRESET
reset => encoder_out[3]~reg0.PRESET
encoder_out[0] <= encoder_out[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
encoder_out[1] <= encoder_out[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
encoder_out[2] <= encoder_out[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
encoder_out[3] <= encoder_out[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
remainder[0] <= remainder[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
remainder[1] <= remainder[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
remainder[2] <= remainder[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
remainder[3] <= remainder[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
remainder[4] <= remainder[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE


